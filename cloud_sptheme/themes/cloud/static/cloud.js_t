/* ~~~~~~~~~~~~~~
 * cloud.js_t
 * ~~~~~~~~~~~~~~
 *
 * Various bits of javascript driving the moving parts behind various
 * parts of the cloud theme. Handles things such as toggleable sections,
 * collapsing the sidebar, etc.
 *
 * :copyright: Copyright 2011 by Assurance Technologies
 * :license: BSD
 */

/* ==========================================================================
 * toggleable sections
 * ==========================================================================
 *
 * Added expand/collapse button to any collapsible RST sections.
 * Looks for sections with CSS class "html-toggle",
 * along with the optional classes "expanded" or "collapsed".
 * Button toggles "html-toggle.expanded/collapsed" classes,
 * and relies on CSS to do the rest of the job displaying them as appropriate.
 */

$(document).ready(function (){
  function init(){
    var jobj = $(this);
    var parent = jobj.parent()

    /* add class for styling purposes */
    jobj.addClass("html-toggle-button");

    /* initialize state */
    _setState(jobj, parent.hasClass("expanded") || _containsHash(parent));

    /* bind toggle callback */
    jobj.click(function (){
      _setState(jobj, !parent.hasClass("expanded"));
      $(window).trigger('cloud-section-toggled', parent[0]);
    });

    /* check for hash changes - older browsers may not have this evt */
    $(window).bind("hashchange", function () {
      var hash = document.location.hash;
      if(!hash)
        return;
      if(_containsHash(parent))
        _setState(jobj, true);
      var pos = $(hash).position();
      window.scrollTo(pos.left, pos.top);
    });
  }

  function _containsHash(parent){
    var hash = document.location.hash;
    if(!hash)
      return false;
    return parent[0].id == hash.substr(1) || parent.find(hash).length>0;
  }

  function _setState(jobj, expanded){
    var parent = jobj.parent();
    if(expanded){
      parent.addClass("expanded").removeClass("collapsed");
      parent.children().show();
    }else{
      parent.addClass("collapsed").removeClass("expanded");
      parent.children().hide();
      parent.children("span:first-child:empty").show(); /* for :ref: span tag */
      jobj.show();
    }
  }

  $(".html-toggle.section > h2, .html-toggle.section > h3, .html-toggle.section > h4, .html-toggle.section > h5, .html-toggle.section > h6").each(init);

});

{%- if theme_collapsiblesidebar | tobool %}
/* ==========================================================================
 * collapsible sidebar
 * ==========================================================================
 *
 * Adds button for collapsing & expanding sidebar,
 * which toggles "document.collapsed-sidebar" CSS class,
 * and relies on CSS for actual styling of visible & hidden sidebars.
 */

$(document).ready(function (){
  var holder = $('<div class="sidebartoggle"><button id="sidebar-hide" title="click to hide the sidebar">&laquo;</button><button id="sidebar-show" style="display: none" title="click to show the sidebar">sidebar &raquo;</button></div>');
  var doc = $('div.document');

  var show_btn = $('#sidebar-show', holder);
  var hide_btn = $('#sidebar-hide', holder);
  var copts = { expires: 7, path: DOCUMENTATION_OPTIONS.url_root };

  show_btn.click(function (){
    doc.removeClass("collapsed-sidebar");
    hide_btn.show();
    show_btn.hide();
    $.cookie("sidebar", "expanded", copts);
    $(window).trigger("cloud-sidebar-toggled", false);
  });

  hide_btn.click(function (){
    doc.addClass("collapsed-sidebar");
    show_btn.show();
    hide_btn.hide();
    $.cookie("sidebar", "collapsed", copts);
    $(window).trigger("cloud-sidebar-toggled", true);
  });

  var state = $.cookie("sidebar");
{% if theme_defaultcollapsed | tobool %}
  if(!state)
    state = "collapsed";
{% endif %}

  doc.append(holder);

  if (state == "collapsed"){
    doc.addClass("collapsed-sidebar");
    show_btn.show();
    hide_btn.hide();
  }
});

{%- endif %}

{%- if theme_stickysidebar | tobool %}
/* ==========================================================================
 * sticky sidebar
 * ==========================================================================
 *
 * Instrument sidebar so that it sticks in place as page is scrolled.
 */
$(document).ready(function (){
  // grab ref to sidebar and setup static css
  var holder = $('.document');
  var sidebar = $('.sphinxsidebar');
  sidebar.css({'position': 'relative', 'left': 0});
{%- if theme_collapsiblesidebar | tobool %}
  var toggle = $('.sidebartoggle');
{%- endif %}

  function clamp(value, lower, upper){
    return (value<lower)?lower:(value>upper)?upper:value;
  }

  // func to update sidebar position based on scrollbar & container positions
  function update_sticky(){
    var offset = $(window).scrollTop() - holder.offset().top;
    sidebar.css({'top': clamp(offset, 0, holder.height() - sidebar.height())});
{%- if theme_collapsiblesidebar | tobool %}
    toggle.css({'top': clamp(offset, 0, holder.height() - toggle.height())});
{%- endif %}
  };

  // run function now, and every time window scrolls
  update_sticky();
  $(window).scroll(update_sticky)
           .resize(update_sticky)
           .bind('cloud-section-toggled', update_sticky);
});

{% endif %}

/* ==========================================================================
 * header breaker
 * ==========================================================================
 *
 * attempts to intelligently insert linebreaks into page titles, where possible.
 * currently only handles titles such as "module - description",
 * adding a break after the "-".
 */
$(document).ready(function (){
  // get header's content, insert linebreaks
  var header = $("h1");
  var orig = header[0].innerHTML;
  var shorter = orig;
  if($("h1 > a:first > tt > span.pre").length > 0){
      shorter = orig.replace(/(<\/tt><\/a>\s*[-:]\s+)/im, "$1<br> ");
  }
  else if($("h1 > tt.literal:first").length > 0){
      shorter = orig.replace(/(<\/tt>\s*[-:]\s+)/im, "$1<br> ");
  }
  if(shorter == orig){
    return;
  }

  // hack to determine full width of header
  header.css({"white-space": "nowrap", "position":"absolute"});
  var header_width = header.width();
  header.css({"white-space": null, "position":null});

  // func to insert linebreaks when needed
  function layout_header(){
    header[0].innerHTML = (header_width > header.parent().width()) ? shorter : orig;
  }

  // run function now, and every time window is resized
  layout_header();
  $(window).resize(layout_header)
           .bind('cloud-sidebar-toggled', layout_header);
});
